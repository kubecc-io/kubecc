syntax = "proto3";
option go_package = "github.com/cobalt77/kubecc/pkg/types";
import "google/protobuf/any.proto";

package types;

message Empty {}

service Consumerd {
  rpc Run(RunRequest) returns (RunResponse);
}

service Scheduler {
  rpc Compile(CompileRequest) returns (CompileResponse);
  rpc StreamIncomingTasks(stream CompileResponse) returns (stream CompileRequest);
  rpc StreamOutgoingTasks(stream CompileRequest) returns (stream CompileResponse);
}

service Monitor {
  rpc Stream(stream Metric) returns (stream Empty);
  rpc Listen(Key) returns (stream google.protobuf.Any);
  rpc Whois(WhoisRequest) returns (WhoisResponse);
}

service Cache {
  rpc Push(PushRequest) returns (Empty);
  rpc Pull(PullRequest) returns (CacheObject);
  rpc Query(QueryRequest) returns (QueryResponse);
  rpc Sync(SyncRequest) returns (stream CacheObject);
}

message PushRequest {
  CacheKey Key = 1;
  CacheObject Object = 2;
}

message PullRequest {
  CacheKey Key = 1;
}

message QueryRequest {
  repeated CacheKey Keys = 1;
}

message QueryResponse {
  repeated CacheObjectMeta Results = 1;
}

message SyncRequest {
  repeated CacheKey LocalCache = 1;
  int64 DesiredCacheSizeKb = 2;
}

message CacheKey {
  string Hash = 1;
}

message CacheObject {
  bytes Data = 1;
  CacheObjectMeta Metadata = 2;
}

message CacheObjectMeta {
  map<string, string> Tags = 1;
  int64 ExpirationDate = 4;
  CacheObjectManaged ManagedFields = 5;
}

message CacheObjectManaged {
  int64 Size = 1;
  int64 Timestamp = 2;
  int64 Score = 3;
  StorageLocation Location = 5;
}

enum StorageLocation {
  StorageLocation_Unknown = 0;
  StorageLocation_Memory = 1;
  StorageLocation_Disk = 2;
  StorageLocation_S3 = 3;
}

message WhoisRequest {
  string UUID = 1;
}

message WhoisResponse {
  string UUID = 1;
  string Address = 2;
  Component Component = 3;
}

message Metric {
  Key Key = 1;
  google.protobuf.Any Value = 2;
}

message Key {
  string Bucket = 1;
  string Name = 2;
}

enum Component {
  Component_Unknown = 0;
  Component_Agent = 1;
  Component_Scheduler = 2;
  Component_Controller = 3;
  Component_Consumer = 4;
  Component_Consumerd = 5;
  Component_Make = 6;
  Component_Test = 7;
  Component_Dashboard = 8;
  Component_CLI = 9;
  Component_Monitor = 10;
  Component_Cache = 11;
}

enum ToolchainKind {
  ToolchainKind_Unknown = 0;
  ToolchainKind_Gnu = 1;
  ToolchainKind_Clang = 2;
  ToolchainKind_Test = 3;
  ToolchainKind_Sleep = 4;
}

enum ToolchainLang {
  ToolchainLang_Unknown = 0;
  ToolchainLang_C = 1;
  ToolchainLang_CXX = 2;
  ToolchainLang_Multi = 3;
}

message Toolchain {
  ToolchainKind Kind = 1;
  ToolchainLang Lang = 2;
  string Executable = 3;
  string TargetArch = 4;
  string Version = 5;
  bool PicDefault = 6;
}

message AgentToolchainInfo {
  string Kind = 1;
  string Target = 2;
  repeated string Versions = 3; 
}

message AgentToolchainInfoList {
  repeated AgentToolchainInfo info = 1; 
}

// consumer -> consumerd
message RunRequest {
  oneof Compiler {
    string Path = 1;
    Toolchain Toolchain = 2;
  }
  repeated string Args = 3;
  uint32 UID = 4;
  uint32 GID = 5;
  string WorkDir = 6;
  repeated string Env = 7;
  bytes Stdin = 8;
}
// consumerd -> consumer
message RunResponse {
  int32 ReturnCode = 1;
  bytes Stdout = 2;
  bytes Stderr = 3;
}

// consumerd -> scheduler
message ScheduleRequest {}

// scheduler -> consumerd
message ScheduleResponse {}

// consumerd -> scheduler -> agent
message CompileRequest {
  string RequestID = 1;
  Toolchain Toolchain = 2;
  repeated string Args = 3;
  bytes PreprocessedSource = 4;
}

// agent -> scheduler -> consumerd
message CompileResponse {
  enum Result {
    Success = 0;
    Fail = 1;
    InternalError = 2;
  }
  string RequestID = 1;
  Result CompileResult = 2;
  int64 CpuSecondsUsed = 3;
  oneof Data {
    string Error = 4;
    bytes CompiledSource = 5;
  }
}

message SystemInfo {
  string Arch = 1;
  int32 CpuThreads = 2;
  uint64 SystemMemory = 3;
  string Hostname = 4;
}