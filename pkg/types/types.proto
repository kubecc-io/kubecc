syntax = "proto3";
import "google/protobuf/wrappers.proto";
option go_package = "proto;types";

message Empty {}

service Consumerd {
  rpc Run(RunRequest) returns (RunResponse);
}

service Agent {
  rpc Compile(CompileRequest) returns (CompileResponse);
}

service Scheduler {
  rpc AtCapacity(Empty) returns (google.protobuf.BoolValue);
  rpc Compile(CompileRequest) returns (CompileResponse);
  // rpc Connect(stream Empty) returns (stream Empty);
}

// consumer -> consumerd
message RunRequest {
  repeated string Args = 1;
  uint32 UID = 2;
  uint32 GID = 3;
  string WorkDir = 4;
  repeated string Env = 5;
  bytes Stdin = 6;
}
// consumerd -> consumer
message RunResponse {
  int32 ReturnCode = 1;
  bytes Stdout = 2;
  bytes Stderr = 3;
}

// consumer -> scheduler
message ScheduleRequest {}

// scheduler -> consumer
message ScheduleResponse {

}


message AgentInfo {
  // System Info
  string Arch = 1;
  int32 NumCpus = 2;

  // Downward API
  string Node = 3;
  string Pod = 4;
  string Namespace = 5;
}

// scheduler -> agent
message CompileRequest {
  string Command = 2;
  repeated string Args = 3;
  bytes PreprocessedSource = 4;
}

// agent -> scheduler
// message CompileStatus {
//   enum Status {
//     Accept = 0;
//     Reject = 1;
//     Success = 2;
//     Fail = 3;
//   }
//   Status CompileStatus = 1;
//   oneof Data {
//     AgentInfo Info = 2;
//     string Error = 3;
//     bytes CompiledSource = 4;
//   }
// }

// scheduler -> consumer
message CompileResponse {
  enum Result {
    Success = 0;
    Fail = 1;
  }
  Result CompileResult = 1;
  oneof Data {
    string Error = 3;
    bytes CompiledSource = 4;
  }
}
