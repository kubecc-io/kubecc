// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: pkg/types/types.proto

package types

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Component int32

const (
	Component_Agent_      Component = 0
	Component_Scheduler_  Component = 1
	Component_Controller_ Component = 2
	Component_Consumer_   Component = 3
	Component_Consumerd_  Component = 4
	Component_Make_       Component = 5
)

// Enum value maps for Component.
var (
	Component_name = map[int32]string{
		0: "Agent_",
		1: "Scheduler_",
		2: "Controller_",
		3: "Consumer_",
		4: "Consumerd_",
		5: "Make_",
	}
	Component_value = map[string]int32{
		"Agent_":      0,
		"Scheduler_":  1,
		"Controller_": 2,
		"Consumer_":   3,
		"Consumerd_":  4,
		"Make_":       5,
	}
)

func (x Component) Enum() *Component {
	p := new(Component)
	*p = x
	return p
}

func (x Component) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Component) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_types_types_proto_enumTypes[0].Descriptor()
}

func (Component) Type() protoreflect.EnumType {
	return &file_pkg_types_types_proto_enumTypes[0]
}

func (x Component) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Component.Descriptor instead.
func (Component) EnumDescriptor() ([]byte, []int) {
	return file_pkg_types_types_proto_rawDescGZIP(), []int{0}
}

type ToolchainKind int32

const (
	ToolchainKind_Gnu_   ToolchainKind = 0
	ToolchainKind_Clang_ ToolchainKind = 1
)

// Enum value maps for ToolchainKind.
var (
	ToolchainKind_name = map[int32]string{
		0: "Gnu_",
		1: "Clang_",
	}
	ToolchainKind_value = map[string]int32{
		"Gnu_":   0,
		"Clang_": 1,
	}
)

func (x ToolchainKind) Enum() *ToolchainKind {
	p := new(ToolchainKind)
	*p = x
	return p
}

func (x ToolchainKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ToolchainKind) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_types_types_proto_enumTypes[1].Descriptor()
}

func (ToolchainKind) Type() protoreflect.EnumType {
	return &file_pkg_types_types_proto_enumTypes[1]
}

func (x ToolchainKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ToolchainKind.Descriptor instead.
func (ToolchainKind) EnumDescriptor() ([]byte, []int) {
	return file_pkg_types_types_proto_rawDescGZIP(), []int{1}
}

type ToolchainLang int32

const (
	ToolchainLang_C_   ToolchainLang = 0
	ToolchainLang_CXX_ ToolchainLang = 1
)

// Enum value maps for ToolchainLang.
var (
	ToolchainLang_name = map[int32]string{
		0: "C_",
		1: "CXX_",
	}
	ToolchainLang_value = map[string]int32{
		"C_":   0,
		"CXX_": 1,
	}
)

func (x ToolchainLang) Enum() *ToolchainLang {
	p := new(ToolchainLang)
	*p = x
	return p
}

func (x ToolchainLang) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ToolchainLang) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_types_types_proto_enumTypes[2].Descriptor()
}

func (ToolchainLang) Type() protoreflect.EnumType {
	return &file_pkg_types_types_proto_enumTypes[2]
}

func (x ToolchainLang) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ToolchainLang.Descriptor instead.
func (ToolchainLang) EnumDescriptor() ([]byte, []int) {
	return file_pkg_types_types_proto_rawDescGZIP(), []int{2}
}

type CompileResponse_Result int32

const (
	CompileResponse_Success CompileResponse_Result = 0
	CompileResponse_Fail    CompileResponse_Result = 1
)

// Enum value maps for CompileResponse_Result.
var (
	CompileResponse_Result_name = map[int32]string{
		0: "Success",
		1: "Fail",
	}
	CompileResponse_Result_value = map[string]int32{
		"Success": 0,
		"Fail":    1,
	}
)

func (x CompileResponse_Result) Enum() *CompileResponse_Result {
	p := new(CompileResponse_Result)
	*p = x
	return p
}

func (x CompileResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CompileResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_types_types_proto_enumTypes[3].Descriptor()
}

func (CompileResponse_Result) Type() protoreflect.EnumType {
	return &file_pkg_types_types_proto_enumTypes[3]
}

func (x CompileResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CompileResponse_Result.Descriptor instead.
func (CompileResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_pkg_types_types_proto_rawDescGZIP(), []int{11, 0}
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_types_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_types_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_pkg_types_types_proto_rawDescGZIP(), []int{0}
}

type Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Component  Component    `protobuf:"varint,1,opt,name=Component,proto3,enum=Component" json:"Component,omitempty"`
	Toolchains []*Toolchain `protobuf:"bytes,2,rep,name=Toolchains,proto3" json:"Toolchains,omitempty"`
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_types_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_types_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_pkg_types_types_proto_rawDescGZIP(), []int{1}
}

func (x *Metadata) GetComponent() Component {
	if x != nil {
		return x.Component
	}
	return Component_Agent_
}

func (x *Metadata) GetToolchains() []*Toolchain {
	if x != nil {
		return x.Toolchains
	}
	return nil
}

type Toolchain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind       ToolchainKind `protobuf:"varint,1,opt,name=Kind,proto3,enum=ToolchainKind" json:"Kind,omitempty"`
	Lang       ToolchainLang `protobuf:"varint,2,opt,name=Lang,proto3,enum=ToolchainLang" json:"Lang,omitempty"`
	Canonical  bool          `protobuf:"varint,3,opt,name=Canonical,proto3" json:"Canonical,omitempty"`
	Executable string        `protobuf:"bytes,4,opt,name=Executable,proto3" json:"Executable,omitempty"`
	TargetArch string        `protobuf:"bytes,5,opt,name=TargetArch,proto3" json:"TargetArch,omitempty"`
	Version    string        `protobuf:"bytes,6,opt,name=Version,proto3" json:"Version,omitempty"`
	PicDefault bool          `protobuf:"varint,7,opt,name=PicDefault,proto3" json:"PicDefault,omitempty"`
}

func (x *Toolchain) Reset() {
	*x = Toolchain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_types_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Toolchain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Toolchain) ProtoMessage() {}

func (x *Toolchain) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_types_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Toolchain.ProtoReflect.Descriptor instead.
func (*Toolchain) Descriptor() ([]byte, []int) {
	return file_pkg_types_types_proto_rawDescGZIP(), []int{2}
}

func (x *Toolchain) GetKind() ToolchainKind {
	if x != nil {
		return x.Kind
	}
	return ToolchainKind_Gnu_
}

func (x *Toolchain) GetLang() ToolchainLang {
	if x != nil {
		return x.Lang
	}
	return ToolchainLang_C_
}

func (x *Toolchain) GetCanonical() bool {
	if x != nil {
		return x.Canonical
	}
	return false
}

func (x *Toolchain) GetExecutable() string {
	if x != nil {
		return x.Executable
	}
	return ""
}

func (x *Toolchain) GetTargetArch() string {
	if x != nil {
		return x.TargetArch
	}
	return ""
}

func (x *Toolchain) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Toolchain) GetPicDefault() bool {
	if x != nil {
		return x.PicDefault
	}
	return false
}

type AgentToolchainInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind     string   `protobuf:"bytes,1,opt,name=Kind,proto3" json:"Kind,omitempty"`
	Target   string   `protobuf:"bytes,2,opt,name=Target,proto3" json:"Target,omitempty"`
	Versions []string `protobuf:"bytes,3,rep,name=Versions,proto3" json:"Versions,omitempty"`
}

func (x *AgentToolchainInfo) Reset() {
	*x = AgentToolchainInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_types_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentToolchainInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentToolchainInfo) ProtoMessage() {}

func (x *AgentToolchainInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_types_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentToolchainInfo.ProtoReflect.Descriptor instead.
func (*AgentToolchainInfo) Descriptor() ([]byte, []int) {
	return file_pkg_types_types_proto_rawDescGZIP(), []int{3}
}

func (x *AgentToolchainInfo) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *AgentToolchainInfo) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *AgentToolchainInfo) GetVersions() []string {
	if x != nil {
		return x.Versions
	}
	return nil
}

type AgentToolchainInfoList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info []*AgentToolchainInfo `protobuf:"bytes,1,rep,name=info,proto3" json:"info,omitempty"`
}

func (x *AgentToolchainInfoList) Reset() {
	*x = AgentToolchainInfoList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_types_types_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentToolchainInfoList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentToolchainInfoList) ProtoMessage() {}

func (x *AgentToolchainInfoList) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_types_types_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentToolchainInfoList.ProtoReflect.Descriptor instead.
func (*AgentToolchainInfoList) Descriptor() ([]byte, []int) {
	return file_pkg_types_types_proto_rawDescGZIP(), []int{4}
}

func (x *AgentToolchainInfoList) GetInfo() []*AgentToolchainInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// consumer -> consumerd
type RunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Compiler string   `protobuf:"bytes,1,opt,name=Compiler,proto3" json:"Compiler,omitempty"`
	Args     []string `protobuf:"bytes,2,rep,name=Args,proto3" json:"Args,omitempty"`
	UID      uint32   `protobuf:"varint,3,opt,name=UID,proto3" json:"UID,omitempty"`
	GID      uint32   `protobuf:"varint,4,opt,name=GID,proto3" json:"GID,omitempty"`
	WorkDir  string   `protobuf:"bytes,5,opt,name=WorkDir,proto3" json:"WorkDir,omitempty"`
	Env      []string `protobuf:"bytes,6,rep,name=Env,proto3" json:"Env,omitempty"`
	Stdin    []byte   `protobuf:"bytes,7,opt,name=Stdin,proto3" json:"Stdin,omitempty"`
}

func (x *RunRequest) Reset() {
	*x = RunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_types_types_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunRequest) ProtoMessage() {}

func (x *RunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_types_types_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunRequest.ProtoReflect.Descriptor instead.
func (*RunRequest) Descriptor() ([]byte, []int) {
	return file_pkg_types_types_proto_rawDescGZIP(), []int{5}
}

func (x *RunRequest) GetCompiler() string {
	if x != nil {
		return x.Compiler
	}
	return ""
}

func (x *RunRequest) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *RunRequest) GetUID() uint32 {
	if x != nil {
		return x.UID
	}
	return 0
}

func (x *RunRequest) GetGID() uint32 {
	if x != nil {
		return x.GID
	}
	return 0
}

func (x *RunRequest) GetWorkDir() string {
	if x != nil {
		return x.WorkDir
	}
	return ""
}

func (x *RunRequest) GetEnv() []string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *RunRequest) GetStdin() []byte {
	if x != nil {
		return x.Stdin
	}
	return nil
}

// consumerd -> consumer
type RunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode int32  `protobuf:"varint,1,opt,name=ReturnCode,proto3" json:"ReturnCode,omitempty"`
	Stdout     []byte `protobuf:"bytes,2,opt,name=Stdout,proto3" json:"Stdout,omitempty"`
	Stderr     []byte `protobuf:"bytes,3,opt,name=Stderr,proto3" json:"Stderr,omitempty"`
}

func (x *RunResponse) Reset() {
	*x = RunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_types_types_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunResponse) ProtoMessage() {}

func (x *RunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_types_types_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunResponse.ProtoReflect.Descriptor instead.
func (*RunResponse) Descriptor() ([]byte, []int) {
	return file_pkg_types_types_proto_rawDescGZIP(), []int{6}
}

func (x *RunResponse) GetReturnCode() int32 {
	if x != nil {
		return x.ReturnCode
	}
	return 0
}

func (x *RunResponse) GetStdout() []byte {
	if x != nil {
		return x.Stdout
	}
	return nil
}

func (x *RunResponse) GetStderr() []byte {
	if x != nil {
		return x.Stderr
	}
	return nil
}

// consumer -> scheduler
type ScheduleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ScheduleRequest) Reset() {
	*x = ScheduleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_types_types_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleRequest) ProtoMessage() {}

func (x *ScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_types_types_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleRequest.ProtoReflect.Descriptor instead.
func (*ScheduleRequest) Descriptor() ([]byte, []int) {
	return file_pkg_types_types_proto_rawDescGZIP(), []int{7}
}

// scheduler -> consumer
type ScheduleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ScheduleResponse) Reset() {
	*x = ScheduleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_types_types_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleResponse) ProtoMessage() {}

func (x *ScheduleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_types_types_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleResponse.ProtoReflect.Descriptor instead.
func (*ScheduleResponse) Descriptor() ([]byte, []int) {
	return file_pkg_types_types_proto_rawDescGZIP(), []int{8}
}

type AgentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// System Info
	Arch    string `protobuf:"bytes,1,opt,name=Arch,proto3" json:"Arch,omitempty"`
	NumCpus int32  `protobuf:"varint,2,opt,name=NumCpus,proto3" json:"NumCpus,omitempty"`
	// Downward API
	Node      string `protobuf:"bytes,3,opt,name=Node,proto3" json:"Node,omitempty"`
	Pod       string `protobuf:"bytes,4,opt,name=Pod,proto3" json:"Pod,omitempty"`
	Namespace string `protobuf:"bytes,5,opt,name=Namespace,proto3" json:"Namespace,omitempty"`
}

func (x *AgentInfo) Reset() {
	*x = AgentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_types_types_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentInfo) ProtoMessage() {}

func (x *AgentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_types_types_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentInfo.ProtoReflect.Descriptor instead.
func (*AgentInfo) Descriptor() ([]byte, []int) {
	return file_pkg_types_types_proto_rawDescGZIP(), []int{9}
}

func (x *AgentInfo) GetArch() string {
	if x != nil {
		return x.Arch
	}
	return ""
}

func (x *AgentInfo) GetNumCpus() int32 {
	if x != nil {
		return x.NumCpus
	}
	return 0
}

func (x *AgentInfo) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *AgentInfo) GetPod() string {
	if x != nil {
		return x.Pod
	}
	return ""
}

func (x *AgentInfo) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// scheduler -> agent
type CompileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command            string   `protobuf:"bytes,2,opt,name=Command,proto3" json:"Command,omitempty"`
	Args               []string `protobuf:"bytes,3,rep,name=Args,proto3" json:"Args,omitempty"`
	PreprocessedSource []byte   `protobuf:"bytes,4,opt,name=PreprocessedSource,proto3" json:"PreprocessedSource,omitempty"`
}

func (x *CompileRequest) Reset() {
	*x = CompileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_types_types_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompileRequest) ProtoMessage() {}

func (x *CompileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_types_types_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompileRequest.ProtoReflect.Descriptor instead.
func (*CompileRequest) Descriptor() ([]byte, []int) {
	return file_pkg_types_types_proto_rawDescGZIP(), []int{10}
}

func (x *CompileRequest) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *CompileRequest) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *CompileRequest) GetPreprocessedSource() []byte {
	if x != nil {
		return x.PreprocessedSource
	}
	return nil
}

// scheduler -> consumer
type CompileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompileResult CompileResponse_Result `protobuf:"varint,1,opt,name=CompileResult,proto3,enum=CompileResponse_Result" json:"CompileResult,omitempty"`
	// Types that are assignable to Data:
	//	*CompileResponse_Error
	//	*CompileResponse_CompiledSource
	Data isCompileResponse_Data `protobuf_oneof:"Data"`
}

func (x *CompileResponse) Reset() {
	*x = CompileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_types_types_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompileResponse) ProtoMessage() {}

func (x *CompileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_types_types_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompileResponse.ProtoReflect.Descriptor instead.
func (*CompileResponse) Descriptor() ([]byte, []int) {
	return file_pkg_types_types_proto_rawDescGZIP(), []int{11}
}

func (x *CompileResponse) GetCompileResult() CompileResponse_Result {
	if x != nil {
		return x.CompileResult
	}
	return CompileResponse_Success
}

func (m *CompileResponse) GetData() isCompileResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *CompileResponse) GetError() string {
	if x, ok := x.GetData().(*CompileResponse_Error); ok {
		return x.Error
	}
	return ""
}

func (x *CompileResponse) GetCompiledSource() []byte {
	if x, ok := x.GetData().(*CompileResponse_CompiledSource); ok {
		return x.CompiledSource
	}
	return nil
}

type isCompileResponse_Data interface {
	isCompileResponse_Data()
}

type CompileResponse_Error struct {
	Error string `protobuf:"bytes,3,opt,name=Error,proto3,oneof"`
}

type CompileResponse_CompiledSource struct {
	CompiledSource []byte `protobuf:"bytes,4,opt,name=CompiledSource,proto3,oneof"`
}

func (*CompileResponse_Error) isCompileResponse_Data() {}

func (*CompileResponse_CompiledSource) isCompileResponse_Data() {}

var File_pkg_types_types_proto protoreflect.FileDescriptor

var file_pkg_types_types_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x6b, 0x67, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x60, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x09,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0a, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x0a, 0x54, 0x6f, 0x6f, 0x6c, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x54, 0x6f, 0x6f,
	0x6c, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x0a, 0x54, 0x6f, 0x6f, 0x6c, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x73, 0x22, 0xeb, 0x01, 0x0a, 0x09, 0x54, 0x6f, 0x6f, 0x6c, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x12, 0x22, 0x0a, 0x04, 0x4b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e,
	0x2e, 0x54, 0x6f, 0x6f, 0x6c, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04,
	0x4b, 0x69, 0x6e, 0x64, 0x12, 0x22, 0x0a, 0x04, 0x4c, 0x61, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x54, 0x6f, 0x6f, 0x6c, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4c, 0x61,
	0x6e, 0x67, 0x52, 0x04, 0x4c, 0x61, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x61, 0x6e, 0x6f,
	0x6e, 0x69, 0x63, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x43, 0x61, 0x6e,
	0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x41, 0x72, 0x63, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x41, 0x72, 0x63, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x69, 0x63, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x50, 0x69, 0x63, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x22, 0x5c, 0x0a, 0x12, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6f, 0x6c, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x4b, 0x69, 0x6e, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x41,
	0x0a, 0x16, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6f, 0x6c, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x6f,
	0x6f, 0x6c, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x22, 0xa2, 0x01, 0x0a, 0x0a, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x41, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x41, 0x72, 0x67, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x55,
	0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x47, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x47, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x57, 0x6f, 0x72, 0x6b, 0x44, 0x69, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x57, 0x6f, 0x72, 0x6b, 0x44, 0x69, 0x72, 0x12, 0x10,
	0x0a, 0x03, 0x45, 0x6e, 0x76, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x45, 0x6e, 0x76,
	0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x64, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x53, 0x74, 0x64, 0x69, 0x6e, 0x22, 0x5d, 0x0a, 0x0b, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x53, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x74, 0x64, 0x65, 0x72, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x53,
	0x74, 0x64, 0x65, 0x72, 0x72, 0x22, 0x11, 0x0a, 0x0f, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7d, 0x0a, 0x09,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x72, 0x63,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x41, 0x72, 0x63, 0x68, 0x12, 0x18, 0x0a,
	0x07, 0x4e, 0x75, 0x6d, 0x43, 0x70, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x4e, 0x75, 0x6d, 0x43, 0x70, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x50,
	0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x50, 0x6f, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x6e, 0x0a, 0x0e, 0x43,
	0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x72, 0x67, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x41, 0x72, 0x67, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x50,
	0x72, 0x65, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x50, 0x72, 0x65, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x65, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xbb, 0x01, 0x0a, 0x0f,
	0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3d, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x0d, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c,
	0x65, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00,
	0x52, 0x0e, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x22, 0x1f, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x61, 0x69, 0x6c, 0x10,
	0x01, 0x42, 0x06, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x2a, 0x62, 0x0a, 0x09, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x5f,
	0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x5f,
	0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x5f, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f,
	0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x64, 0x5f,
	0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x61, 0x6b, 0x65, 0x5f, 0x10, 0x05, 0x2a, 0x25, 0x0a,
	0x0d, 0x54, 0x6f, 0x6f, 0x6c, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x08,
	0x0a, 0x04, 0x47, 0x6e, 0x75, 0x5f, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x6c, 0x61, 0x6e,
	0x67, 0x5f, 0x10, 0x01, 0x2a, 0x21, 0x0a, 0x0d, 0x54, 0x6f, 0x6f, 0x6c, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x4c, 0x61, 0x6e, 0x67, 0x12, 0x06, 0x0a, 0x02, 0x43, 0x5f, 0x10, 0x00, 0x12, 0x08, 0x0a,
	0x04, 0x43, 0x58, 0x58, 0x5f, 0x10, 0x01, 0x32, 0x2d, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x72, 0x64, 0x12, 0x20, 0x0a, 0x03, 0x52, 0x75, 0x6e, 0x12, 0x0b, 0x2e, 0x52, 0x75,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x52, 0x75, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x35, 0x0a, 0x05, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12,
	0x2c, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x12, 0x0f, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x8d, 0x01,
	0x0a, 0x09, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x0a, 0x41,
	0x74, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2c, 0x0a,
	0x07, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x12, 0x0f, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x07, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x09, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x28, 0x01, 0x30, 0x01, 0x42, 0x0d, 0x5a,
	0x0b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_types_types_proto_rawDescOnce sync.Once
	file_pkg_types_types_proto_rawDescData = file_pkg_types_types_proto_rawDesc
)

func file_pkg_types_types_proto_rawDescGZIP() []byte {
	file_pkg_types_types_proto_rawDescOnce.Do(func() {
		file_pkg_types_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_types_types_proto_rawDescData)
	})
	return file_pkg_types_types_proto_rawDescData
}

var file_pkg_types_types_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_pkg_types_types_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_pkg_types_types_proto_goTypes = []interface{}{
	(Component)(0),                 // 0: Component
	(ToolchainKind)(0),             // 1: ToolchainKind
	(ToolchainLang)(0),             // 2: ToolchainLang
	(CompileResponse_Result)(0),    // 3: CompileResponse.Result
	(*Empty)(nil),                  // 4: Empty
	(*Metadata)(nil),               // 5: Metadata
	(*Toolchain)(nil),              // 6: Toolchain
	(*AgentToolchainInfo)(nil),     // 7: AgentToolchainInfo
	(*AgentToolchainInfoList)(nil), // 8: AgentToolchainInfoList
	(*RunRequest)(nil),             // 9: RunRequest
	(*RunResponse)(nil),            // 10: RunResponse
	(*ScheduleRequest)(nil),        // 11: ScheduleRequest
	(*ScheduleResponse)(nil),       // 12: ScheduleResponse
	(*AgentInfo)(nil),              // 13: AgentInfo
	(*CompileRequest)(nil),         // 14: CompileRequest
	(*CompileResponse)(nil),        // 15: CompileResponse
	(*wrappers.BoolValue)(nil),     // 16: google.protobuf.BoolValue
}
var file_pkg_types_types_proto_depIdxs = []int32{
	0,  // 0: Metadata.Component:type_name -> Component
	6,  // 1: Metadata.Toolchains:type_name -> Toolchain
	1,  // 2: Toolchain.Kind:type_name -> ToolchainKind
	2,  // 3: Toolchain.Lang:type_name -> ToolchainLang
	7,  // 4: AgentToolchainInfoList.info:type_name -> AgentToolchainInfo
	3,  // 5: CompileResponse.CompileResult:type_name -> CompileResponse.Result
	9,  // 6: Consumerd.Run:input_type -> RunRequest
	14, // 7: Agent.Compile:input_type -> CompileRequest
	4,  // 8: Scheduler.AtCapacity:input_type -> Empty
	14, // 9: Scheduler.Compile:input_type -> CompileRequest
	5,  // 10: Scheduler.Connect:input_type -> Metadata
	10, // 11: Consumerd.Run:output_type -> RunResponse
	15, // 12: Agent.Compile:output_type -> CompileResponse
	16, // 13: Scheduler.AtCapacity:output_type -> google.protobuf.BoolValue
	15, // 14: Scheduler.Compile:output_type -> CompileResponse
	4,  // 15: Scheduler.Connect:output_type -> Empty
	11, // [11:16] is the sub-list for method output_type
	6,  // [6:11] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_pkg_types_types_proto_init() }
func file_pkg_types_types_proto_init() {
	if File_pkg_types_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_types_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_types_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_types_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Toolchain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_types_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentToolchainInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_types_types_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentToolchainInfoList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_types_types_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_types_types_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_types_types_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_types_types_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_types_types_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_types_types_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_types_types_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pkg_types_types_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*CompileResponse_Error)(nil),
		(*CompileResponse_CompiledSource)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_types_types_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_pkg_types_types_proto_goTypes,
		DependencyIndexes: file_pkg_types_types_proto_depIdxs,
		EnumInfos:         file_pkg_types_types_proto_enumTypes,
		MessageInfos:      file_pkg_types_types_proto_msgTypes,
	}.Build()
	File_pkg_types_types_proto = out.File
	file_pkg_types_types_proto_rawDesc = nil
	file_pkg_types_types_proto_goTypes = nil
	file_pkg_types_types_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ConsumerdClient is the client API for Consumerd service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConsumerdClient interface {
	Run(ctx context.Context, in *RunRequest, opts ...grpc.CallOption) (*RunResponse, error)
}

type consumerdClient struct {
	cc grpc.ClientConnInterface
}

func NewConsumerdClient(cc grpc.ClientConnInterface) ConsumerdClient {
	return &consumerdClient{cc}
}

func (c *consumerdClient) Run(ctx context.Context, in *RunRequest, opts ...grpc.CallOption) (*RunResponse, error) {
	out := new(RunResponse)
	err := c.cc.Invoke(ctx, "/Consumerd/Run", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConsumerdServer is the server API for Consumerd service.
type ConsumerdServer interface {
	Run(context.Context, *RunRequest) (*RunResponse, error)
}

// UnimplementedConsumerdServer can be embedded to have forward compatible implementations.
type UnimplementedConsumerdServer struct {
}

func (*UnimplementedConsumerdServer) Run(context.Context, *RunRequest) (*RunResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Run not implemented")
}

func RegisterConsumerdServer(s *grpc.Server, srv ConsumerdServer) {
	s.RegisterService(&_Consumerd_serviceDesc, srv)
}

func _Consumerd_Run_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsumerdServer).Run(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Consumerd/Run",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsumerdServer).Run(ctx, req.(*RunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Consumerd_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Consumerd",
	HandlerType: (*ConsumerdServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Run",
			Handler:    _Consumerd_Run_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/types/types.proto",
}

// AgentClient is the client API for Agent service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AgentClient interface {
	Compile(ctx context.Context, in *CompileRequest, opts ...grpc.CallOption) (*CompileResponse, error)
}

type agentClient struct {
	cc grpc.ClientConnInterface
}

func NewAgentClient(cc grpc.ClientConnInterface) AgentClient {
	return &agentClient{cc}
}

func (c *agentClient) Compile(ctx context.Context, in *CompileRequest, opts ...grpc.CallOption) (*CompileResponse, error) {
	out := new(CompileResponse)
	err := c.cc.Invoke(ctx, "/Agent/Compile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AgentServer is the server API for Agent service.
type AgentServer interface {
	Compile(context.Context, *CompileRequest) (*CompileResponse, error)
}

// UnimplementedAgentServer can be embedded to have forward compatible implementations.
type UnimplementedAgentServer struct {
}

func (*UnimplementedAgentServer) Compile(context.Context, *CompileRequest) (*CompileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Compile not implemented")
}

func RegisterAgentServer(s *grpc.Server, srv AgentServer) {
	s.RegisterService(&_Agent_serviceDesc, srv)
}

func _Agent_Compile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CompileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).Compile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Agent/Compile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).Compile(ctx, req.(*CompileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Agent_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Agent",
	HandlerType: (*AgentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Compile",
			Handler:    _Agent_Compile_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/types/types.proto",
}

// SchedulerClient is the client API for Scheduler service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SchedulerClient interface {
	AtCapacity(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*wrappers.BoolValue, error)
	Compile(ctx context.Context, in *CompileRequest, opts ...grpc.CallOption) (*CompileResponse, error)
	Connect(ctx context.Context, opts ...grpc.CallOption) (Scheduler_ConnectClient, error)
}

type schedulerClient struct {
	cc grpc.ClientConnInterface
}

func NewSchedulerClient(cc grpc.ClientConnInterface) SchedulerClient {
	return &schedulerClient{cc}
}

func (c *schedulerClient) AtCapacity(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*wrappers.BoolValue, error) {
	out := new(wrappers.BoolValue)
	err := c.cc.Invoke(ctx, "/Scheduler/AtCapacity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *schedulerClient) Compile(ctx context.Context, in *CompileRequest, opts ...grpc.CallOption) (*CompileResponse, error) {
	out := new(CompileResponse)
	err := c.cc.Invoke(ctx, "/Scheduler/Compile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *schedulerClient) Connect(ctx context.Context, opts ...grpc.CallOption) (Scheduler_ConnectClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Scheduler_serviceDesc.Streams[0], "/Scheduler/Connect", opts...)
	if err != nil {
		return nil, err
	}
	x := &schedulerConnectClient{stream}
	return x, nil
}

type Scheduler_ConnectClient interface {
	Send(*Metadata) error
	Recv() (*Empty, error)
	grpc.ClientStream
}

type schedulerConnectClient struct {
	grpc.ClientStream
}

func (x *schedulerConnectClient) Send(m *Metadata) error {
	return x.ClientStream.SendMsg(m)
}

func (x *schedulerConnectClient) Recv() (*Empty, error) {
	m := new(Empty)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SchedulerServer is the server API for Scheduler service.
type SchedulerServer interface {
	AtCapacity(context.Context, *Empty) (*wrappers.BoolValue, error)
	Compile(context.Context, *CompileRequest) (*CompileResponse, error)
	Connect(Scheduler_ConnectServer) error
}

// UnimplementedSchedulerServer can be embedded to have forward compatible implementations.
type UnimplementedSchedulerServer struct {
}

func (*UnimplementedSchedulerServer) AtCapacity(context.Context, *Empty) (*wrappers.BoolValue, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AtCapacity not implemented")
}
func (*UnimplementedSchedulerServer) Compile(context.Context, *CompileRequest) (*CompileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Compile not implemented")
}
func (*UnimplementedSchedulerServer) Connect(Scheduler_ConnectServer) error {
	return status.Errorf(codes.Unimplemented, "method Connect not implemented")
}

func RegisterSchedulerServer(s *grpc.Server, srv SchedulerServer) {
	s.RegisterService(&_Scheduler_serviceDesc, srv)
}

func _Scheduler_AtCapacity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchedulerServer).AtCapacity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Scheduler/AtCapacity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchedulerServer).AtCapacity(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Scheduler_Compile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CompileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchedulerServer).Compile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Scheduler/Compile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchedulerServer).Compile(ctx, req.(*CompileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Scheduler_Connect_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SchedulerServer).Connect(&schedulerConnectServer{stream})
}

type Scheduler_ConnectServer interface {
	Send(*Empty) error
	Recv() (*Metadata, error)
	grpc.ServerStream
}

type schedulerConnectServer struct {
	grpc.ServerStream
}

func (x *schedulerConnectServer) Send(m *Empty) error {
	return x.ServerStream.SendMsg(m)
}

func (x *schedulerConnectServer) Recv() (*Metadata, error) {
	m := new(Metadata)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Scheduler_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Scheduler",
	HandlerType: (*SchedulerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AtCapacity",
			Handler:    _Scheduler_AtCapacity_Handler,
		},
		{
			MethodName: "Compile",
			Handler:    _Scheduler_Compile_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Connect",
			Handler:       _Scheduler_Connect_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "pkg/types/types.proto",
}
